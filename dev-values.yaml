conduktor:
  ingress:
    enabled: true
    hostname: conduktor.dev{{ .Values.instanceSuffix }}.qlpinc.com
  config:
    clusters:
      - id: dev
        name: dev
        color: "#0013E7"
        bootstrapServers: "kafka-controller-headless:9092"
        properties: |
          security.protocol=PLAINTEXT
        kafkaConnects:
          - url: http://kafka-connect:8083
            name: kafka connect

kafka:
  controller:
    replicaCount: 1
    controllerOnly: false
    resources:
      requests:
        memory: 1Gi
      limits:
        memory: 2Gi
  broker:
    replicaCount: 0
    resources:
      requests:
        memory: 1Gi
      limits:
        memory: 2Gi

kafka-connect:
  bootstrapServers: kafka-controller-headless:9092
  resources:
    limits:
      memory: 4Gi
      cpu: 1000m
    requests:
      memory: 2Gi
      cpu: 500m
  connectors:
    outbox:
      config:
        bootstrap.servers: kafka-controller-headless:9092
        security.protocol: PLAINTEXT
        connect.keep.alive: "false"
        connector.class: io.debezium.connector.mysql.MySqlConnector
        database.allowPublicKeyRetrieval: "true"
        database.connectionTimeZone: America/Chicago
        database.hostname: db
        database.include.list: shared_db
        database.password: admin1
        database.port: "3306"
        database.server.name: db
        database.server.id: "123"
        database.user: root
        topic.prefix: dbs1
        include.schema.changes: "false"
        table.include.list: shared_db.event_outbox
        key.converter: org.apache.kafka.connect.json.JsonConverter
        value.converter: org.apache.kafka.connect.json.JsonConverter
        key.converter.schemas.enable: "false"
        value.converter.schemas.enable: "false"
        transforms: outbox
        transforms.outbox.type: io.debezium.transforms.outbox.EventRouter
        transforms.outbox.drop.headers: "true"
        transforms.outbox.table.expand.json.payload: "true"
        transforms.outbox.table.fields.additional.placement: "eventtype:envelope:type"
        transforms.outbox.route.topic.replacement: "${routedByValue}"
        schema.history.internal.kafka.topic: schema-changes.outbox
        schema.history.internal.kafka.bootstrap.servers: kafka-controller-headless:9092
        schema.history.internal.kafka.security.protocol: PLAINTEXT